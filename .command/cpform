#!/bin/bash

COPLIEN_LIB_PATH="/Users/yuki/dotfiles/.command/"

create_file() {
    for class_file_name in "${@}" ;
    do
        # create cpp file
        if [ ! -e "${class_file_name}.cpp" ]; then
            sed -e "s/__CLASS_NAME__/${class_file_name}/g" \
                ${COPLIEN_LIB_PATH}/template/template.cpp > ${class_file_name}.cpp
            printf "${GREEN}create ${class_file_name}.cpp${RESET}\n"
        fi

        # create hpp file
        if [ ! -e "${class_file_name}.hpp" ]; then
            class_name_replaced="`sed -e s/__CLASS_NAME__/${class_file_name}/g \
                ${COPLIEN_LIB_PATH}/template/template.hpp`"
            HEADER_CONST="`echo ${class_file_name} | tr [a-z] [A-Z]`"
            HEADER_CONST="`echo ${HEADER_CONST} | tr . _`"
            echo "${class_name_replaced}" |
            sed -e "s/__HEADER__/${HEADER_CONST}_HPP/g" > ${class_file_name}.hpp
            printf "${GREEN}create ${class_file_name}.hpp${RESET}\n"
        fi
    done
}

delete_file() {
    for class_file_name in "${@}" ;
    do
        if [ -e "${class_file_name}.cpp" ]; then
            rm -rf ${class_file_name}.cpp
            printf "${RED}delete ${class_file_name}.cpp${RESET}\n"
        fi

        if [ -e "${class_file_name}.hpp" ]; then
            rm -rf ${class_file_name}.hpp
            printf "${RED}delete ${class_file_name}.hpp${RESET}\n"
        fi
    done
}

RESET="\e[0m"
GREEN="\e[32m"
RED="\e[31m"

# ${@:a:b} で、a番目の引数からb個の引数を取得できる
# $# でchppコマンドに渡された引数の数を取得するので、
# 第二引数から最後の引数までをcreate/delete_file関数に渡している
if [ "$1" = "g" ]; then
    create_file ${@:2:($# - 1)}
elif [ "$1" = "d" ]; then
    delete_file ${@:2:($# - 1)}
else
    echo "Usage : ${CMD_NAME} [OPTION] [FILE_NAME_TO_CREATE]
There are:
    g option to create ***.cpp ***.hpp
    d option to delete ***.cpp ***.hpp
Examples:
    ${CMD_NAME} g hoge fuga            (then create hoge.cpp hoge.hpp fuga.cpp fuga.hpp)
    ${CMD_NAME} d hoge fuga            (then delete hoge.cpp hoge.hpp fuga.cpp fuga.hpp)
More info: https://github.com/sniper-fly/coplien-form-generator"

fi

